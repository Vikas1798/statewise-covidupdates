{"version":3,"sources":["components/Statewise.jsx","App.js","index.js"],"names":["numFormatter","num","toFixed","Statewise","useState","data","setData","getCovidData","a","fetch","res","json","actualData","statewise","useEffect","className","src","alt","id","width","map","curEle","index","state","confirmed","style","color","recovered","deaths","active","lastupdatedtime","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAGA,SAASA,EAAaC,GACpB,OAAIA,EAAM,KAAOA,EAAM,KACbA,EAAM,KAAMC,QAAQ,GAAK,IACxBD,EAAM,KACPA,EAAM,KAASC,QAAQ,GAAK,IAC3BD,EAAM,IACRA,OADF,EAIT,IA0FeE,EA1FG,WAChB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,8BAAAC,EAAA,sEACDC,MAAM,0CADL,cACbC,EADa,gBAEMA,EAAIC,OAFV,OAEbC,EAFa,OAGnBN,EAAQM,EAAWC,WAHA,2CAAH,qDASlB,OAHAC,qBAAU,WACRP,MACC,IAED,qCACE,sBAAKQ,UAAU,kBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,yBAAf,uBAEE,+BACE,qBACEC,IAAI,4HACJC,IAAI,aACJC,GAAG,OACHC,MAAM,QACNJ,UAAU,cARhB,iBAcF,qBAAKA,UAAU,mBAAf,SACE,wBAAOA,UAAU,oBAAjB,UACE,uBAAOA,UAAU,wBAAjB,SACE,+BACE,wCACA,4CACA,4CACA,yCACA,yCACA,+CAGJ,gCACGV,EAAKe,KAAI,SAACC,EAAQC,GACjB,OACE,mCACE,+BACE,qBAAIP,UAAU,YAAd,cAA4BM,EAAOE,SACnC,qBAAIR,UAAU,4BAAd,UACGf,EAAaqB,EAAOG,WACrB,sBAAMT,UAAU,SAAhB,SACE,mBACEA,UAAU,kBACVU,MAAO,CAAEC,MAAO,cAItB,qBAAIX,UAAU,4BAAd,UACGf,EAAaqB,EAAOM,WACrB,sBAAMZ,UAAU,SAAhB,SACE,mBACEA,UAAU,oBACVU,MAAO,CAAEC,MAAO,0BAItB,qBAAIX,UAAU,yBAAd,UACG,IACAf,EAAaqB,EAAOO,WAEvB,qBAAIb,UAAU,yBAAd,UACG,IACAf,EAAaqB,EAAOQ,WAEvB,mCAAMR,EAAOS,qBA5BNR,kBAqCvB,wBAAQP,UAAU,gCAAlB,SACE,oECrFOgB,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.88396c1d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Statewise.css\";\r\n\r\nfunction numFormatter(num) {\r\n  if (num > 999 && num < 1000000) {\r\n    return (num / 1000).toFixed(1) + \"K\"; // convert to K for number from > 1000 < 1 million\r\n  } else if (num > 1000000) {\r\n    return (num / 1000000).toFixed(1) + \"M\"; // convert to M for number from > 1 million\r\n  } else if (num < 900) {\r\n    return num; // if value < 1000, nothing to do\r\n  }\r\n}\r\nconst Statewise = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const getCovidData = async () => {\r\n    const res = await fetch(\"https://api.covid19india.org/data.json\");\r\n    const actualData = await res.json();\r\n    setData(actualData.statewise);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCovidData();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"main-heading\">\r\n          <div className=\"text-center text-white\">\r\n            COVID &nbsp;\r\n            <span>\r\n              <img\r\n                src=\"https://st.depositphotos.com/1820591/1447/v/600/depositphotos_14478983-stock-illustration-creative-indian-flag-design.jpg\"\r\n                alt=\"india logo\"\r\n                id=\"logo\"\r\n                width=\"200px\"\r\n                className=\"flagimg\"\r\n              />\r\n            </span>\r\n            Dashboard\r\n          </div>\r\n        </div>\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover\">\r\n            <thead className=\"table-dark text-white\">\r\n              <tr>\r\n                <th> State</th>\r\n                <th> Confirmed</th>\r\n                <th> Recovered</th>\r\n                <th> Deaths</th>\r\n                <th> Active</th>\r\n                <th> Updated</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.map((curEle, index) => {\r\n                return (\r\n                  <>\r\n                    <tr key={index}>\r\n                      <td className=\"state-css\"> {curEle.state}</td>\r\n                      <td className=\"confirmed-css text-center\">\r\n                        {numFormatter(curEle.confirmed)}\r\n                        <span className=\"arrows\">\r\n                          <i\r\n                            className=\"fas fa-arrow-up\"\r\n                            style={{ color: \"red\" }}\r\n                          ></i>\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"recovered-css text-center\">\r\n                        {numFormatter(curEle.recovered)}\r\n                        <span className=\"arrows\">\r\n                          <i\r\n                            className=\"fas fa-arrow-down\"\r\n                            style={{ color: \"rgb(0, 255, 64)\" }}\r\n                          ></i>\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"deaths-css text-center\">\r\n                        {\" \"}\r\n                        {numFormatter(curEle.deaths)}\r\n                      </td>\r\n                      <td className=\"active-css text-center\">\r\n                        {\" \"}\r\n                        {numFormatter(curEle.active)}\r\n                      </td>\r\n                      <td> {curEle.lastupdatedtime}</td>\r\n                    </tr>\r\n                  </>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <footer className=\"footer text-center text-white\">\r\n        <p> ---Developed by @Vikashk--- </p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statewise;\r\n","// covid state wise\nimport React from \"react\";\nimport Statewise from \"./components/Statewise\";\nconst App = () => {\n  return (\n    <>\n      <Statewise />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}